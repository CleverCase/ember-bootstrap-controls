export default class EventedTokenizer {
    private delegate;
    private entityParser;
    private state;
    private input;
    private index;
    private tagLine;
    private tagColumn;
    line: number;
    column: number;
    constructor(delegate: any, entityParser: any);
    reset(): void;
    tokenize(input: any): void;
    tokenizePart(input: any): void;
    tokenizeEOF(): void;
    flushData(): void;
    peek(): any;
    consume(): any;
    consumeCharRef(): any;
    markTagStart(): void;
    states: {
        beforeData(): void;
        data(): void;
        tagOpen(): void;
        markupDeclaration(): void;
        commentStart(): void;
        commentStartDash(): void;
        comment(): void;
        commentEndDash(): void;
        commentEnd(): void;
        tagName(): void;
        beforeAttributeName(): void;
        attributeName(): void;
        afterAttributeName(): void;
        beforeAttributeValue(): void;
        attributeValueDoubleQuoted(): void;
        attributeValueSingleQuoted(): void;
        attributeValueUnquoted(): void;
        afterAttributeValueQuoted(): void;
        selfClosingStartTag(): void;
        endTagOpen(): void;
    };
}
