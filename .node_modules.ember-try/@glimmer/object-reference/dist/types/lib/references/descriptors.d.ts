import { Reference, Tag } from '@glimmer/reference';
import { NotifiableReference } from '../types';
export interface InnerReferenceFactory<T> {
    new (object: any, property: string, outer: NotifiableReference<any>): Reference<T>;
}
export declare class PropertyReference<T> implements Reference<T> {
    private object;
    private property;
    tag: Tag;
    constructor(object: any, property: string, _outer: NotifiableReference<T>);
    value(): any;
    label(): string;
}
export declare function ComputedReferenceBlueprint<T>(_property: any, dependencies: any): InnerReferenceFactory<T>;
