"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _descriptors = require("./lib/references/descriptors");

Object.defineProperty(exports, "ComputedReferenceBlueprint", {
  enumerable: true,
  get: function () {
    return _descriptors.ComputedReferenceBlueprint;
  }
});
Object.defineProperty(exports, "PropertyReference", {
  enumerable: true,
  get: function () {
    return _descriptors.PropertyReference;
  }
});

var _meta = require("./lib/meta");

Object.defineProperty(exports, "CLASS_META", {
  enumerable: true,
  get: function () {
    return _meta.CLASS_META;
  }
});
Object.defineProperty(exports, "Meta", {
  enumerable: true,
  get: function () {
    return _interopRequireDefault(_meta).default;
  }
});
Object.defineProperty(exports, "metaFor", {
  enumerable: true,
  get: function () {
    return _meta.metaFor;
  }
});

var _object = require("./lib/object");

Object.defineProperty(exports, "setProperty", {
  enumerable: true,
  get: function () {
    return _object.setProperty;
  }
});
Object.defineProperty(exports, "notifyProperty", {
  enumerable: true,
  get: function () {
    return _object.notifyProperty;
  }
});

var _path = require("./lib/references/path");

Object.defineProperty(exports, "ObjectReference", {
  enumerable: true,
  get: function () {
    return _interopRequireDefault(_path).default;
  }
});

var _root = require("./lib/references/root");

Object.defineProperty(exports, "UpdatableReference", {
  enumerable: true,
  get: function () {
    return _interopRequireDefault(_root).default;
  }
});

var _reference = require("@glimmer/reference");

Object.defineProperty(exports, "ConstReference", {
  enumerable: true,
  get: function () {
    return _reference.ConstReference;
  }
});
Object.defineProperty(exports, "isConst", {
  enumerable: true,
  get: function () {
    return _reference.isConst;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkNvbXB1dGVkUmVmZXJlbmNlQmx1ZXByaW50IiwiUHJvcGVydHlSZWZlcmVuY2UiLCJDTEFTU19NRVRBIiwiZGVmYXVsdCIsIm1ldGFGb3IiLCJzZXRQcm9wZXJ0eSIsIm5vdGlmeVByb3BlcnR5IiwiQ29uc3RSZWZlcmVuY2UiLCJpc0NvbnN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozt3QkFBU0EsMEI7Ozs7Ozt3QkFBNEJDLGlCOzs7Ozs7Ozs7aUJBQzVCQyxVOzs7Ozs7eUNBQVlDLE87Ozs7OztpQkFBaUJDLE87Ozs7Ozs7OzttQkFDN0JDLFc7Ozs7OzttQkFBYUMsYzs7Ozs7Ozs7O3lDQUNiSCxPOzs7Ozs7Ozs7eUNBQ0FBLE87Ozs7Ozs7OztzQkFDQUksYzs7Ozs7O3NCQUFnQkMsTyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IENvbXB1dGVkUmVmZXJlbmNlQmx1ZXByaW50LCBQcm9wZXJ0eVJlZmVyZW5jZSB9IGZyb20gXCIuL2xpYi9yZWZlcmVuY2VzL2Rlc2NyaXB0b3JzXCI7XG5leHBvcnQgeyBDTEFTU19NRVRBLCBkZWZhdWx0IGFzIE1ldGEsIG1ldGFGb3IgfSBmcm9tIFwiLi9saWIvbWV0YVwiO1xuZXhwb3J0IHsgc2V0UHJvcGVydHksIG5vdGlmeVByb3BlcnR5IH0gZnJvbSAnLi9saWIvb2JqZWN0JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgT2JqZWN0UmVmZXJlbmNlIH0gZnJvbSAnLi9saWIvcmVmZXJlbmNlcy9wYXRoJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgVXBkYXRhYmxlUmVmZXJlbmNlIH0gZnJvbSAnLi9saWIvcmVmZXJlbmNlcy9yb290JztcbmV4cG9ydCB7IENvbnN0UmVmZXJlbmNlLCBpc0NvbnN0IH0gZnJvbSAnQGdsaW1tZXIvcmVmZXJlbmNlJzsiXX0=