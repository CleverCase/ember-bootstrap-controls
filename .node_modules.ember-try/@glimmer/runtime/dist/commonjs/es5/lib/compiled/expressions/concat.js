"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConcatReference = undefined;

var _reference = require("@glimmer/reference");

function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
        var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
            Object.defineProperty(obj, key, value);
        }
    }return obj;
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);
}

var ConcatReference = exports.ConcatReference = function (_CachedReference) {
    _inherits(ConcatReference, _CachedReference);

    function ConcatReference(parts) {
        _classCallCheck(this, ConcatReference);

        var _this = _possibleConstructorReturn(this, _CachedReference.call(this));

        _this.parts = parts;
        _this.tag = (0, _reference.combineTagged)(parts);
        return _this;
    }

    ConcatReference.prototype.compute = function compute() {
        var parts = new Array();
        for (var i = 0; i < this.parts.length; i++) {
            var value = this.parts[i].value();
            if (value !== null && value !== undefined) {
                parts[i] = castToString(value);
            }
        }
        if (parts.length > 0) {
            return parts.join('');
        }
        return null;
    };

    return ConcatReference;
}(_reference.CachedReference);
function castToString(value) {
    if (typeof value.toString !== 'function') {
        return '';
    }
    return String(value);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21waWxlZC9leHByZXNzaW9ucy9jb25jYXQuanMiXSwibmFtZXMiOlsiQ2FjaGVkUmVmZXJlbmNlIiwiY29tYmluZVRhZ2dlZCIsIkNvbmNhdFJlZmVyZW5jZSIsInBhcnRzIiwidGFnIiwiY29tcHV0ZSIsIkFycmF5IiwiaSIsImxlbmd0aCIsInZhbHVlIiwidW5kZWZpbmVkIiwiY2FzdFRvU3RyaW5nIiwiam9pbiIsInRvU3RyaW5nIiwiU3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsQUFBUyxBQUFULEFBQTBCLEFBQTFCLEFBQStDLEFBQS9DLEFBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFBYSxBQUFiLHdFQUFBOytCQUNJOzs2QkFBWSxBQUFaLE9BQW1COzhCQUFBOztxREFDZixzQkFEZSxBQUVmOztjQUFLLEFBQUwsUUFBYSxBQUFiLEFBQ0E7Y0FBSyxBQUFMLE1BQVcsOEJBQWMsQUFBZCxBQUFYLEFBSGU7ZUFJbEI7QUFMTDs7OEJBTUksQUFOSiw2QkFNYyxBQUNOO1lBQUksUUFBUSxJQUFJLEFBQUosQUFBWixBQUNBO2FBQUssSUFBSSxJQUFJLEFBQWIsR0FBZ0IsSUFBSSxLQUFLLEFBQUwsTUFBVyxBQUEvQixRQUF1QyxBQUF2QyxLQUE0QyxBQUN4QztnQkFBSSxRQUFRLEtBQUssQUFBTCxNQUFXLEFBQVgsR0FBYyxBQUFkLEFBQVosQUFDQTtnQkFBSSxVQUFVLEFBQVYsUUFBa0IsVUFBVSxBQUFoQyxXQUEyQyxBQUN2QztzQkFBTSxBQUFOLEtBQVcsYUFBYSxBQUFiLEFBQVgsQUFDSDtBQUNKO0FBQ0Q7WUFBSSxNQUFNLEFBQU4sU0FBZSxBQUFuQixHQUFzQixBQUNsQjttQkFBTyxNQUFNLEFBQU4sS0FBVyxBQUFYLEFBQVAsQUFDSDtBQUNEO2VBQU8sQUFBUCxBQUNIO0FBbEJMOztXQUFBO0FBQXFDLEFBQXJDO0FBb0JBLFNBQVMsQUFBVCxhQUFzQixBQUF0QixPQUE2QixBQUN6QjtRQUFJLE9BQU8sTUFBTSxBQUFiLGFBQTBCLEFBQTlCLFlBQTBDLEFBQ3RDO2VBQU8sQUFBUCxBQUNIO0FBQ0Q7V0FBTyxPQUFPLEFBQVAsQUFBUCxBQUNIIiwiZmlsZSI6ImxpYi9jb21waWxlZC9leHByZXNzaW9ucy9jb25jYXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYWNoZWRSZWZlcmVuY2UsIGNvbWJpbmVUYWdnZWQgfSBmcm9tICdAZ2xpbW1lci9yZWZlcmVuY2UnO1xuZXhwb3J0IGNsYXNzIENvbmNhdFJlZmVyZW5jZSBleHRlbmRzIENhY2hlZFJlZmVyZW5jZSB7XG4gICAgY29uc3RydWN0b3IocGFydHMpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5wYXJ0cyA9IHBhcnRzO1xuICAgICAgICB0aGlzLnRhZyA9IGNvbWJpbmVUYWdnZWQocGFydHMpO1xuICAgIH1cbiAgICBjb21wdXRlKCkge1xuICAgICAgICBsZXQgcGFydHMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgdmFsdWUgPSB0aGlzLnBhcnRzW2ldLnZhbHVlKCk7XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IG51bGwgJiYgdmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHBhcnRzW2ldID0gY2FzdFRvU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocGFydHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnRzLmpvaW4oJycpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNhc3RUb1N0cmluZyh2YWx1ZSkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUudG9TdHJpbmcgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbn0iXX0=