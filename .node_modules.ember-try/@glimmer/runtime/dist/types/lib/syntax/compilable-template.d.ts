import { SymbolTable } from '@glimmer/interfaces';
import { Statement } from '@glimmer/wire-format';
import { CompiledDynamicTemplate, CompiledStaticTemplate } from '../compiled/blocks';
import Environment from '../environment';
import { CompilableTemplate as ICompilableTemplate } from './interfaces';
export default class CompilableTemplate<S extends SymbolTable> implements ICompilableTemplate<S> {
    statements: Statement[];
    symbolTable: S;
    private compiledStatic;
    private compiledDynamic;
    constructor(statements: Statement[], symbolTable: S);
    compileStatic(env: Environment): CompiledStaticTemplate;
    compileDynamic(env: Environment): CompiledDynamicTemplate<S>;
}
