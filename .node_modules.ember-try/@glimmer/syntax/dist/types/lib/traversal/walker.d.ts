import { AST } from "@glimmer/syntax";
import { Option } from "@glimmer/interfaces";
export declare type NodeCallback<N extends AST.Node> = (node: N, walker: Walker) => void;
export default class Walker {
    order: any;
    stack: any[];
    constructor(order?: any);
    visit<N extends AST.Node>(node: Option<N>, callback: NodeCallback<N>): void;
    children(node: any, callback: any): void;
}
